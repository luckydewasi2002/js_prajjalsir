link:   jsonplaceholder.typicode.com/users


1. Data fetch hone ke baad, pehle user ka name extract karo using object destructuring.
ans.=>
async function fetchdata() {
    try {
        
        const response = await fetch('https://jsonplaceholder.typicode.com/users');
        const data = await response.json(); 
  
       //console.log(data)
       const [{ name: firstName }] = data;
     console.log( firstName);
   
   
    } catch (error) {
       
        console.error( error);
    }
  }
  
  
  fetchdata();
  --------------------------------------------
2. Data fetch hone ke baad, user jiska id 3 hai, uska address extract karo using object destructuring.
ans.=>
async function fetchdata() {
  try {
      
      const response = await fetch('https://jsonplaceholder.typicode.com/users');
      const data = await response.json(); 

     //console.log(data)
     const { address: data3Address } = data.find(data => data.id === 3);
    console.log( data3Address);
 


  } catch (error) {
     
      console.error( error);
  }
}


fetchdata();
----------------------------------------
3. Data fetch hone ke baad, pehle user ka email extract karo using object destructuring.
ans.=>
async function fetchdata() {
  try {
      
      const response = await fetch('https://jsonplaceholder.typicode.com/users');
      const data = await response.json(); 

     //console.log(data)
     const [{ email: firstUserEmail }] = data;
     console.log( firstUserEmail);
 


  } catch (error) {
     
      console.error( error);
  }
}


fetchdata();
-------------------------------------------
4. Data fetch hone ke baad, aakhri user ka website extract karo using object destructuring.
ans.=>
async function fetchdata() {
  try {
      
      const response = await fetch('https://jsonplaceholder.typicode.com/users');
      const data = await response.json(); 

     //console.log(data)
     const { website: lastUserWebsite } = data[data.length - 1];
    console.log( lastUserWebsite);


  } catch (error) {
     
      console.error( error);
  }
}


fetchdata();
--------------------------------------------------------------
5. Data fetch hone ke baad, har teesra (multiple of 3) user ka name ka array banao.

6. Data fetch hone ke baad, har teesra (multiple of 3) user ka company name ka array banao.

7.Data fetch hone ke baad, har teesra (multiple of 3) user ka username ka array banao.

8. Data fetch hone ke baad, paanchve user ka phone aur email extract karo using object destructuring.
------------------------------------------------------------------------------------------------------------
9. Data fetch hone ke baad, doosre user ka address.city aur address.zipcode extract karo using object destructuring.
ans.=>
async function fetchdata() {
    try {
        
        const response = await fetch('https://jsonplaceholder.typicode.com/users');
        const data = await response.json(); 
  
       //console.log(data)
       const [ , secondUser] = data; 
        
      
       const { address: { city, zipcode } } = secondUser;
       
       console.log(`City: ${city}`);       
       console.log(`Zipcode: ${zipcode}`); 
   
    } catch (error) {
       
        console.error( error);
    }
  }
  
  
  fetchdata();
  -----------------------------------------------------------
10. Data fetch hone ke baad, saathve user ka company.name aur company.catchPhrase extract karo using object destructuring.
ans.=>

async function fetchdata() {
    try {
        
        const response = await fetch('https://jsonplaceholder.typicode.com/users');
        const data = await response.json(); 
  
       //console.log(data)
       const [ , , , , , , seventhUser] = data; 
        
      
       const { company: { name, catchPhrase } } = seventhUser;
       
       console.log(`name: ${name}`);       
       console.log(`catchPhrase: ${catchPhrase}`); 
   
    } catch (error) {
       
        console.error( error);
    }
  }
  
  
  fetchdata();

  ---------------------------------------------------------
11. Data fetch hone ke baad, chauthe user ka address.geo extract karo using object destructuring.
ans.=>
async function fetchdata() {
    try {
        
        const response = await fetch('https://jsonplaceholder.typicode.com/users');
        const data = await response.json(); 
  
       //console.log(data)
       const [ , , , fourthUser] = data; 
        
      
       const { address: { geo } } = fourthUser;
       
       console.log(`geo: ${geo}`);       
      
    } catch (error) {
       
        console.error( error);
    }
  }
  
  
  fetchdata();
  ----------------------------------------------------------------
12. Data fetch hone ke baad, har teesra (multiple of 3) user ke address.street ka array banao.
ans.=>

async function fetchdata() {
    try {
        
        const response = await fetch('https://jsonplaceholder.typicode.com/users');
        const data = await response.json(); 
  
       //console.log(data)
       const streets = data
            .filter((_, index) => (index + 1) % 3 === 0) 
            .map(user => user.address.street); 

        console.log(streets);       
      
    } catch (error) {
       
        console.error( error);
    }
  }
  
  
  fetchdata();
  ----------------------------------------------------------------

13. Data fetch hone ke baad, users ka ek naya array banao jo city "South Christy" mein rehte hain using filter method.
ans.=>
async function fetchdata() {
    try {
        
        const response = await fetch('https://jsonplaceholder.typicode.com/users');
        const data = await response.json(); 
  
       //console.log(data)
     const fil= data.filter(user=>user.address.city=="South Christy")     
      console.log(fil)
    } catch (error) {
       
        console.error( error);
    }
  }
  
  
  fetchdata();
  ---------------------------------------------------------------
14. Data fetch hone ke baad, users ka ek naya array banao jinka company name "Romaguera-Crona" hai using filter method.
ans.=>

async function fetchdata() {
    try {
        
        const response = await fetch('https://jsonplaceholder.typicode.com/users');
        const data = await response.json(); 
  
       //console.log(data)
     const fil= data.filter(user=>user.company.name=="Romaguera-Crona")     
      console.log(fil)
    } catch (error) {
       
        console.error( error);
    }
  }
  
  
  fetchdata();
  
  -------------------------------------------------------------------
15. Data fetch hone ke baad, users ka array se 3 users ko remove karo starting from index 2 using splice method.
ans.=>
async function fetchdata() {
  try {
      
      const response = await fetch('https://jsonplaceholder.typicode.com/users');
      const data = await response.json(); 

     //console.log(data)
     const usersCopy = [...data];
     usersCopy.splice(2, 3);
     console.log( usersCopy);
 


  } catch (error) {
     
      console.error( error);
  }
}


fetchdata();

--------------------------------------------------------------------------------
16. Data fetch hone ke baad, users ka ek naya array banao jo pehle 5 users ko contain karta ho using slice method.
ans.=>

async function fetchdata() {
  try {
      
      const response = await fetch('https://jsonplaceholder.typicode.com/users');
      const data = await response.json(); 

     //console.log(data)
     const first5Users = data.slice(0, 5);
    console.log( first5Users);
 
 
  } catch (error) {
     
      console.error( error);
  }
}


fetchdata();
------------------------------------------------------------------
17. Data fetch hone ke baad, users ka name ka ek naya array banao using reduce method.

18. Data fetch hone ke baad, users ka ek naya array banao jo users ke email contain karta ho jin ka address.zipcode "92998-3874" hai using filter and map methods.
------------------------------------------------------------------------
19. Data fetch hone ke baad, users ka company.name ka ek naya array banao jinka address.city "Lebsackbury" hai using filter and reduce methods.
ans.=>
async function fetchdata() {
    try {
        
        const response = await fetch('https://jsonplaceholder.typicode.com/users');
        const data = await response.json(); 
  
       //console.log(data)
       const filteredUsers = data.filter(user => user.address.city === 'Lebsackbury');
        
      
       const companyNames = filteredUsers.reduce((names, user) => {
           names.push(user.company.name);
           return names;
       }, []);
       
       console.log(companyNames);
    } catch (error) {
       
        console.error( error);
    }
  }
  
  
  fetchdata();
  ------------------------------------------------------------------
20. Data fetch hone ke baad, users ka username ka ek naya array banao jo pehle 3 users ko contain karta ho jinka city "South Christy" hai using filter and slice methods.
ans.=>
async function fetchdata() {
    try {
        
        const response = await fetch('https://jsonplaceholder.typicode.com/users');
        const data = await response.json(); 
  
       //console.log(data)
       const filteredUsers = data.filter(user => user.address.city === 'South Christy');
        
       
        const firstThreeUsers = filteredUsers.slice(0, 3);
        
        
        const usernames = firstThreeUsers.map(user => user.username);
        
        console.log(usernames); 

    } catch (error) {
       
        console.error( error);
    }
  }
  
  
  fetchdata();
  ------------------------------------------------------------------
21. Data fetch hone ke baad, users ka website ka ek naya array banao using map method.
ans.=>
async function fetchdata() {
  try {
      
      const response = await fetch('https://jsonplaceholder.typicode.com/users');
      const data = await response.json(); 

     //console.log(data)
     const userWebsites = data.map(user => user.website);
     console.log( userWebsites);
 
 
 
  } catch (error) {
     
      console.error( error);
  }
}


fetchdata();
--------------------------------------------------------------------------------
22. Data fetch hone ke baad, users ka ek naya array banao jinka phone "(254)" se start hota hai using filter method.
ans.=>
async function fetchdata() {
    try {
        
        const response = await fetch('https://jsonplaceholder.typicode.com/users');
        const data = await response.json(); 
  
       //console.log(data)
       const filteredUsers = data.filter(user => user.phone.startsWith('(254)'));

        console.log(filteredUsers); 

    } catch (error) {
       
        console.error( error);
    }
  }
  
  
  fetchdata();
  -------------------------------------------------------------
23. Data fetch hone ke baad, users ka sab username ko ek string mein concatenate karo using reduce method.
ans.=>
async function fetchdata() {
    try {
        
        const response = await fetch('https://jsonplaceholder.typicode.com/users');
        const data = await response.json(); 
  
       //console.log(data)
       const concatenatedUsernames = data.reduce((accumulator, user) => {
        return accumulator + user.username;
    }, ' ');

    console.log(concatenatedUsernames); 

    } catch (error) {
       
        console.error( error);
    }
  }
  
  
  fetchdata();
  --------------------------------------------------------------------
24. Data fetch hone ke baad, users ka array mein ek naya user add karo at index 5 using splice method.
ans.=>

    async function fetchdata() {
    try {
        
        const response = await fetch('https://jsonplaceholder.typicode.com/users');
        const data = await response.json(); 
  
       //console.log(data)
       const newUser = { id: 5.1,
       username: 'frank',
    email: 'frank@jasper.info',
    address: {
      street: 'Norberto Crossing',
      suite: 'Apt. 950',
      city: 'nagaur Christy',
      zipcode: '88505-1337',
      geo: [Object]
        }
    }

       // Use splice to add the new user at index 5
       // Parameters for splice: index, number of items to remove, item(s) to add
       data.splice(5, 0, newUser);

       console.log(data);

    } catch (error) {
       
        console.error( error);
    }
  }
  
  
  fetchdata();
  -------------------------------------------------------------------------------
25. Data fetch hone ke baad, users ka ek naya array banao jo middle 4 users ko contain karta ho using slice method.

-------------------------------------------------------------------------
26. Data fetch hone ke baad, users ka email ka ek naya array banao jinka address.zipcode "59590-4157" hai using filter and map methods.

------------------------------------------------------------------------------------
27. Data fetch hone ke baad, ek object banao jisme keys username aur values email ho using reduce method.
ans.=>
async function fetchdata() {
    try {
        
        const response = await fetch('https://jsonplaceholder.typicode.com/users');
        const data = await response.json(); 
  
       //console.log(data)
       const usernameEmailObject = data.reduce((accumulator, user) => {
        accumulator[user.username] = user.email;
        return accumulator;
    }, {});

    console.log(usernameEmailObject);

    } catch (error) {
       
        console.error( error);
    }
  }
  
  
  fetchdata();
  -------------------------------------------------------------------------------
28. Data fetch hone ke baad, users ka ek naya array banao jo aakhri 3 users ko contain karta ho using slice method.
ans.=>
      async function fetchdata() {
    try {
        
        const response = await fetch('https://jsonplaceholder.typicode.com/users');
        const data = await response.json(); 
  
       //console.log(data)
       const lastThreeUsers = data.slice(7,10);

       console.log(lastThreeUsers); 

    } catch (error) {
       
        console.error( error);
    }
  }
  
  
  fetchdata();
  ----------------------------------------------------------------------
29. Data fetch hone ke baad, users ka array mein se un users ko remove karo jo city "Kulas Light" mein rehte hain using filter and splice methods.
ans.=>





async function fetchdata() {
    try {
        
        const response = await fetch('https://jsonplaceholder.typicode.com/users');
        const data = await response.json(); 
  
       //console.log(data)
       const usersToRemove = data.filter(user => user.address.city === 'Kulas Light');
        
       
       usersToRemove.forEach(userToRemove => {
          
           const index = data.findIndex(user => user.id === userToRemove.id);
           if (index !== -1) {
              
               data.splice(index, 1);
           }
       });
       
       console.log(data);
    } catch (error) {
       
        console.error( error);
    }
  }
  
  
  fetchdata();
----------------------------------------------------------------------------------------------------------
30. Data fetch hone ke baad, users ka ek naya array banao jo unke address ko full address string mein convert karta ho using map method.
ans.=>






async function fetchdata() {
    try {
        
        const response = await fetch('https://jsonplaceholder.typicode.com/users');
        const data = await response.json(); 
  
       //console.log(data)
       const fullAddressArray = data.map(user => {
        const { street, city, zipcode } = user.address;
        return `${street}, ${city}, ${zipcode}`;
    });

    console.log(fullAddressArray);
    } catch (error) {
       
        console.error( error);
    }
  }
  
  
  fetchdata();
  --------------------------------------------------------------------------------------------------- 